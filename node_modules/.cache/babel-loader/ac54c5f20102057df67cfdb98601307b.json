{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anura\\\\smartbrain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Signin from './Signin/signin';\nimport Register from './Register/Register';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './Navigation/navigation';\nimport Logo from './LOGO/Logo';\nimport Imag from './Image/Image';\nimport Rank from './rank/Rank';\nimport Facedetect from './Face/facedetection.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'f656cc73e40844d5a5d984cc88c3d102'\n});\nconst particlesop = {\n  particles: {\n    number: {\n      value: 75,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loaduser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: 0,\n          joined: ''\n        }\n      });\n    };\n\n    this.Calculatefacebox = data => {\n      const box = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      return {\n        leftCol: box.left_col * width,\n        topRow: box.top_row * height,\n        rightCol: width - box.right_col * width,\n        bottomRow: height - box.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n      console.log(box);\n    };\n\n    this.onInputchange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageurl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:5000/image', {\n            method: 'put',\n            headers: {\n              'content-type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user\n            })\n          });\n        }\n\n        console.log(response);\n        return this.displayFaceBox(this.Calculatefacebox(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageurl: '',\n      box: {},\n      route: 'Signin',\n      isSignin: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000').then(response => response.json()).then(console.log);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"part\",\n        params: particlesop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), this.state.route === 'Signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 8\n      }, this) : this.state.route === 'Register' ? /*#__PURE__*/_jsxDEV(Register, {\n        onRouteChange: this.onRouteChange,\n        loaduser: this.loaduser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 41\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Imag, {\n          onInputchange: this.onInputchange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Facedetect, {\n          imageUrl: this.state.imageurl,\n          box: this.state.box\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App; // NOTE :- If we want to destructure and intead of say this.state.imageurl we want to use just\n//imageurl ignoring the this. part , so we basically have to do at the beginning of the render ,\n// {input , imageurl , box , route} = this.state ;","map":{"version":3,"sources":["C:/Users/anura/smartbrain/src/App.js"],"names":["React","Component","Signin","Register","Clarifai","Particles","Navigation","Logo","Imag","Rank","Facedetect","app","App","apiKey","particlesop","particles","number","value","density","enable","value_area","constructor","loaduser","data","setState","user","id","name","email","entries","joined","Calculatefacebox","box","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputchange","event","input","target","onButtonSubmit","imageurl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","catch","err","onRouteChange","route","isSignin","componentDidMount","json","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport Signin from './Signin/signin' ;\nimport Register from './Register/Register' ;\nimport Clarifai from 'clarifai' ;\nimport Particles from 'react-particles-js';\nimport Navigation from './Navigation/navigation';\nimport Logo from './LOGO/Logo';\nimport Imag from './Image/Image';\nimport Rank from './rank/Rank' ;\nimport Facedetect from './Face/facedetection.js';\nconst app = new Clarifai.App({\n  apiKey: 'f656cc73e40844d5a5d984cc88c3d102'\n });\nconst particlesop = {\n  particles: {\n    number: {\n      value : 75,\n      density :{\n        enable: true,\n        value_area: 800\n      }\n\n    } \n  }\n}\nclass App extends Component{\n  constructor(){\n    super() ;\n    this.state = {\n      input: '' ,\n      imageurl: '' ,\n      box: {} ,\n      route: 'Signin' ,\n      isSignin : false ,\n      user : {\n        id : '' ,\n        name : '' ,\n        email : '' ,\n        entries : 0 , \n        joined : '' \n      }\n    }\n  }\n  loaduser = (data) => {\n    this.setState({user : {\n      id : data.id ,\n      name : data.name ,\n      email : data.email ,\n      entries : 0 ,\n      joined : ''\n    }}) \n  }\n  componentDidMount(){\n     fetch('http://localhost:5000').then(response => response.json())\n     .then(console.log) ;\n  }\n  Calculatefacebox = (data) =>{\n    const box = data.outputs[0].data.regions[0].region_info.bounding_box ;\n    const image = document.getElementById('inputimage') ;\n    const width = Number(image.width) ;\n    const height = Number(image.height) ;\n    console.log(width,height) ;\n    return {\n      leftCol: box.left_col * width ,\n      topRow: box.top_row * height ,\n      rightCol: width - (box.right_col * width) ,\n      bottomRow: height - (box.bottom_row * height) \n    }\n  }\n  displayFaceBox = (box) => {\n    this.setState({box: box}) ;\n    console.log(box) ;\n  }\n  onInputchange =(event)=>{\n    this.setState({input : event.target.value}) ;\n  }\n  onButtonSubmit = ()=>{\n    this.setState({imageurl : this.state.input}) ;\n    app.models.predict(\n      Clarifai.FACE_DETECT_MODEL , \n      this.state.input)\n    .then(response =>{ \n      if(response){\n        fetch('http://localhost:5000/image' , {\n          method : 'put' ,\n          headers : {'content-type' : 'application/json'} ,\n          body : JSON.stringify({\n            id : this.state.user\n          })\n        })\n      }\n      console.log(response) ; \n      return(this.displayFaceBox(this.Calculatefacebox(response))) ;}) \n     .catch(err => console.log(err)) ;\n  }\n  onRouteChange = (route)=>{\n    this.setState({route:route}) ;\n  }\n  render(){\n      return (\n    <div className=\"App\">\n      <Particles className=\"part\" \n                params={particlesop} />\n    {this.state.route === 'Signin'\n     ? <Signin onRouteChange={this.onRouteChange} />\n    : (\n      this.state.route === 'Register' ? <Register onRouteChange={this.onRouteChange} loaduser={this.loaduser} />\n    : <div>\n     <Navigation onRouteChange={this.onRouteChange} />\n     <Logo />\n     <Rank />\n     <Imag onInputchange={this.onInputchange} onButtonSubmit={this.onButtonSubmit} />\n    <Facedetect imageUrl={this.state.imageurl} box={this.state.box} /> \n    </div>)\n    }\n    </div>\n  ); }\n}\n\nexport default App ;\n// NOTE :- If we want to destructure and intead of say this.state.imageurl we want to use just\n//imageurl ignoring the this. part , so we basically have to do at the beginning of the render ,\n// {input , imageurl , box , route} = this.state ;\n\n"]},"metadata":{},"sourceType":"module"}